plot(hc.out,labels=nci.labs)
abline(h=139,col='red')
cutree(nc.out,4)
cutree(hc.out,4)
summary(cutree(hc.out,4))
hc.out
set.seed(2)
km.out=kmeans(sd.data,4,nstart=20)
km.clusters=km.out$cluster
table(km.clusters,hc.clusters)
hc.out=hclust(dist(pr.out$x[,1:5]))
plot(hc.out,labels=nci.labs,main='Hier clust on first 5 score vectors')
table(cutree(hc.out,4),nci.labs)
install.packages('dendextend')
library(dendextend)
labels_colors(hc.out) = colorCodes[groupCodes][order.dendrogram(dend)]
dend=as.dendrogram(hc.out)
dend
str(dend)
as.numeric(nci.labs)
nci.labs
str(nci.labs)
as.numeric(as.factor(nci.labs))
labels_colors(dend) = as.numeric(as.factor(nci.labs))[order.dendrogram(dend)]
plot(dend)
labels(dend)=nci.labs
plot(dend)
dend=color_brances(dend,k=5)
dend=color_branches(dend,k=5)
plot(dend)
library(dendextend)
nci.colors=as.numeric(as.factor(nci.labs))
dend=as.dendrogram(hc.out)
labels_colors(dend) = nci.colors[nci.labs][order.dendrogram(dend)]
plot(dend)
labels_colors(dend) = nci.colors[order.dendrogram(dend)]
plot(dend)
labels(dend)=nci.labs
labels_colors(dend) = nci.colors[order.dendrogram(dend)]
plot(dend)
nci.colors=as.numeric(as.factor(nci.labs))
dend=as.dendrogram(hc.out)
labels(dend)=nci.labs[order.dendrogram(dend)]
labels_colors(dend) = nci.colors[order.dendrogram(dend)]
plot(dend)
load('Desktop/CG_tile.dist.rds')
readRDS('Desktop/CG_tile.dist.rds')
data=readRDS('Desktop/CG_tile.dist.rds')
library(dendextend)
plot(data)
data2=as.dendrogram(data)
plot(data2)
labels(data2)
all=read.delim('Desktop/CG_alltiles_merged.2017-05-03 09:41:15.txt',head=T,nrow=100000)
metapath='./metadata.txt'
context='CG'
calculate_dist <- function(data,column){
meta=read.delim(metapath,head=T)
current=names(data[,4:ncol(data)])
c2=matrix(unlist(strsplit(current,'_')),ncol=7,byrow=T)
c2=c2[,1]
#split by period for the SRA downloaded files
c2=matrix(unlist(strsplit(c2,'\\.')),ncol=5,byrow=T)
c2=c2[,3]
meta82=meta[meta[,1] %in% c2,]
meta82=meta82[match(c2,meta82[,1]),]
colnames(data)[4:ncol(data)]=as.character(meta82[,column])
hc=hclust(as.dist(1-cor(as.matrix(data[,4:ncol(data)]),use='pairwise.complete.obs')))
return(hc)
}
tile.dist=calculate_dist(all,6)
metapath='./Desktop/metadata.txt'
tile.dist=calculate_dist(all,6)
plot_dendro <- function(hc,column,title){
pdf(paste(title,'methylation_dendrogram.',current,'.pdf',sep='_'),height=9,width=60)
dendro_labels=gsub('_.*','',gsub('\\.[0-9]*','',as.character(meta82[,column])))
dendro_colors=as.numeric(as.factor(gsub('_.*','',gsub('\\.[0-9]*','',as.character(meta82[,8])))))
hc=as.dendrogram(hc)
#labels(hc)=dendro_labels[order.dendrogram(hc)]
labels_colors(hc) = dendro_colors[order.dendrogram(hc)]
print(plot(hc,main=paste(title,sep=' ')))
dev.off()
}
plot_dendro(tile.dist,6,paste(context,'_sample',sep=''))
current=Sys.time()
plot_dendro(tile.dist,6,paste(context,'_sample',sep=''))
meta=read.delim(metapath,head=T)
current=names(data[,4:ncol(data)])
c2=matrix(unlist(strsplit(current,'_')),ncol=7,byrow=T)
c2=c2[,1]
#split by period for the SRA downloaded files
c2=matrix(unlist(strsplit(c2,'\\.')),ncol=5,byrow=T)
c2=c2[,3]
meta82=meta[meta[,1] %in% c2,]
meta82=meta82[match(c2,meta82[,1]),]
meta=read.delim(metapath,head=T)
current=names(data[,4:ncol(data)])
c2=matrix(unlist(strsplit(current,'_')),ncol=7,byrow=T)
c2=c2[,1]
#split by period for the SRA downloaded files
c2=matrix(unlist(strsplit(c2,'\\.')),ncol=5,byrow=T)
c2=c2[,3]
meta82=meta[meta[,1] %in% c2,]
meta82=meta82[match(c2,meta82[,1]),]
data=all
meta=read.delim(metapath,head=T)
current=names(data[,4:ncol(data)])
c2=matrix(unlist(strsplit(current,'_')),ncol=7,byrow=T)
c2=c2[,1]
#split by period for the SRA downloaded files
c2=matrix(unlist(strsplit(c2,'\\.')),ncol=5,byrow=T)
c2=c2[,3]
meta82=meta[meta[,1] %in% c2,]
meta82=meta82[match(c2,meta82[,1]),]
plot_dendro(tile.dist,6,paste(context,'_sample',sep=''))
library(dendextend)
plot_dendro(tile.dist,6,paste(context,'_sample',sep=''))
#gather metadata info for samples
meta=read.delim(metapath,head=T)
current=names(all[,4:ncol(all)])
c2=matrix(unlist(strsplit(current,'_')),ncol=7,byrow=T)
c2=c2[,1]
#split by period for the SRA downloaded files
c2=matrix(unlist(strsplit(c2,'\\.')),ncol=5,byrow=T)
c2=c2[,3]
meta82=meta[meta[,1] %in% c2,]
meta82=meta82[match(c2,meta82[,1]),]
###########
calculate_cor <- function(data,column){
colnames(data)[4:ncol(data)]=as.character(meta82[,column])
cor_matrix=as.matrix(cor(data[,4:ncol(data)],use='pairwise.complete.obs'))
return(cor_matrix)
}
###########
plot_heatmap <- function(cor_matrix,title){
pdf(paste(title,'methylation_heatmap.',current,'.pdf',sep='_'),height=15,width=15)
print(heatmap(cor_matrix,main=paste(title,sep=' ')))
dev.off()
return(NULL)
}
tile.cor=calculate_cor(all,6)
plot_heatmap(tile.cor,paste(context,'_sample',sep=''))
plot_heatmap(tile.cor,paste(context,'_sample',sep=''))
###########
plot_heatmap <- function(cor_matrix,title){
pdf(paste(title,'methylation_heatmap.',current,'.pdf',sep='_'),height=30,width=30)
print(heatmap(cor_matrix,main=paste(title,sep=' ')))
dev.off()
return(NULL)
}
plot_heatmap(tile.cor,paste(context,'_sample',sep=''))
setwd("~/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
dataset = read.csv('50_Startups.csv')
head(dataset)
dataset$State = factor(dataset$State
, levels=c('New York',' California','Florida')
,labels=c(1,2,3))
head(dataset)
table(dataset$State)
table(dataset$State,exclude=NULL)
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State
, levels=c('New York',' California','Florida')
,labels=c(1,2,3))
table(dataset$State)
dataset = read.csv('50_Startups.csv')
head(dataset)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels=c('New York','California','Florida'),
labels=c(1,2,3))
head(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(Profit ~ R.D.Spend + Administration + Marketing.Spend + State)
regressor = lm(Profit ~ R.D.Spend + Administration + Marketing.Spend + State,data=training_set)
regressor = lm(Profit ~ .,data=training_set)
plot(regressor)
dev.off()
plot(regressor)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
plot(regressor)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
plot(y_pred test_set$Profit)
plot(y_pred, test_set$Profit)
y_pred
summary(regressor)$p.value
str(regressor)
regressor = lm(Profit ~ R.D.Spend + Administration + Marketing.Spend + State,data=training_set)
regressor = lm(Profit ~ R.D.Spend + Administration + Marketing.Spend + State,data=dataset)
summary(regressor)
regressor$terms
regressor = lm(Profit ~ R.D.Spend + Administration + Marketing.Spend,data=dataset)
summary(regressor)
regressor = lm(Profit ~ R.D.Spend + Marketing.Spend,data=dataset)
summary(regressor)
regressor = lm(Profit ~ R.D.Spend,data=dataset)
summary(regressor)
setwd("~/Dropbox/Labwork/Eichten_Projects/BVZ0049_decra_pilot/clonal_brachypodium/chambers_and_phenotype")
#libs
library(plyr)
library(dplyr)
library(broom)
library(reshape2)
library(ggplot2)
library(tidyr)
library(readr)
library(lubridate)
library(gganimate)
library(xts)
library(grid)
library(knitr)
library(animation)
library(scales)
#goal is to make the phenomic data into a 'tidy' format for subsequent analyses and reproducable science.
#input data is a direct cvs dump of the google sheet used to initially collect  the phenotypic information (SRE & AMH) from 2015-2016
#final measurments coded to the final day in the chamber
#final height, tiller, ear count on March 8th, 2016 - ch02
spring.pheno=read.csv('BVZ0049-phenotyping-record-CH02-Spring.csv',head=T)
spring.pheno = spring.pheno %>% tbl_df()
spring.pheno = within(spring.pheno, rm(X4.4.re.dry.BioMass, Seed.Count, X50seed.Weight))
#growth stages late for hybridum were not measured, marked as '-', converting to numeric and NAs
spring.pheno$Nov13_GrowthStage = as.numeric(as.character(spring.pheno$Nov13_GrowthStage))
spring.pheno$Nov16_GrowthStage = as.numeric(as.character(spring.pheno$Nov16_GrowthStage))
#start making more tidy
test = spring.pheno %>% select(-Dec16_TissueHarvest.DNA.Location, -Dec16_TissueHarvest.RNA.Location) %>% gather(variable,value,
-PlantID,
-PlantName,
-Accession,
-ClonalGroup,
-Replicate,
-AccessionID,
-ExperimentID,
-User,
-GrowthLocation,
-TrayPosition,
-PlantingDate,
-IntoChamberDate,
-EmergenceDate,
-EarEmergenceDate)
#pull a column into measurement date to relate to time
test$measurement_date = ifelse(test$variable=='Oct12_GrowthStage','2015-10-12',
ifelse(test$variable=='Oct14_GrowthStage','2015-10-14',
ifelse(test$variable=='Oct17_GrowthStage','2015-10-17',
ifelse(test$variable=='Oct19_GrowthStage','2015-10-19',
ifelse(test$variable=='Oct21_GrowthStage','2015-10-23',
ifelse(test$variable=='Oct23_GrowthStage','2015-10-23',
ifelse(test$variable=='Oct26_GrowthStage','2015-10-26',
ifelse(test$variable=='Oct28_GrowthStage','2015-10-28',
ifelse(test$variable=='Oct30_GrowthStage','2015-10-30',
ifelse(test$variable=='Nov2_GrowthStage','2015-11-02',
ifelse(test$variable=='Nov4_GrowthStage','2015-11-04',
ifelse(test$variable=='Nov6_GrowthStage','2015-11-06',
ifelse(test$variable=='Nov13_GrowthStage','2015-11-13',
ifelse(test$variable=='Nov16_GrowthStage','2015-11-16',
ifelse(test$variable=='Oct17_Heightcm','2015-10-17',
ifelse(test$variable=='Oct23_Heightcm','2015-10-23',
ifelse(test$variable=='Oct30_Heightcm','2015-10-30',
ifelse(test$variable=='Nov6_Heightcm','2015-11-06',
ifelse(test$variable=='Nov13_Heightcm','2015-11-13',
ifelse(test$variable=='Nov20_Heightcm','2015-11-20',
ifelse(test$variable=='Dec4_Heightcm','2015-12-04',
ifelse(test$variable=='Dec11_Heightcm','2015-12-11',
ifelse(test$variable=='Nov11_TillerCount','2015-11-11',
ifelse(test$variable=='Dec9_TillerCount','2015-12-09',
ifelse(test$variable=='X3rd.Leaf_Width.cm','2015-11-11',
ifelse(test$variable=='X3rd.Leaf_Length.cm','2015-11-11',
ifelse(test$variable=='Final.Height.cm','2016-02-12',
ifelse(test$variable=='Final.Tiller.Count','2016-02-12',
ifelse(test$variable=='Ear.Count','2016-02-12',
ifelse(test$variable=='AboveSoil.BioMass.mg','2016-03-08','nope'))))))))))))))))))))))))))))))
#rename measurements properly
test$variable = ifelse(test$variable=='Oct12_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct14_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct17_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct19_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct21_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct23_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct26_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct28_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct30_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov2_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov4_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov6_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov13_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov16_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct17_Heightcm','Height',
ifelse(test$variable=='Oct23_Heightcm','Height',
ifelse(test$variable=='Oct30_Heightcm','Height',
ifelse(test$variable=='Nov6_Heightcm','Height',
ifelse(test$variable=='Nov13_Heightcm','Height',
ifelse(test$variable=='Nov20_Heightcm','Height',
ifelse(test$variable=='Dec4_Heightcm','Height',
ifelse(test$variable=='Dec11_Heightcm','Height',
ifelse(test$variable=='Nov11_TillerCount','Tiller Count',
ifelse(test$variable=='Dec9_TillerCount','Tiller Count',
ifelse(test$variable=='X3rd.Leaf_Width.cm','Leaf Width',
ifelse(test$variable=='X3rd.Leaf_Length.cm','Leaf Length',
ifelse(test$variable=='Final.Height.cm','Height',
ifelse(test$variable=='Final.Tiller.Count','Tiller Count',
ifelse(test$variable=='Ear.Count','Ear Count',
ifelse(test$variable=='AboveSoil.BioMass.mg','Biomass','nope'))))))))))))))))))))))))))))))
test = test %>% tbl_df() %>%
mutate(Replicate = as.factor(Replicate),
AccessionID = as.factor(AccessionID),
PlantID = as.factor(PlantID),
PlantingDate = parse_date_time(PlantingDate, '%m/%d/%y'),
IntoChamberDate = parse_date_time(IntoChamberDate, '%m/%d/%y'),
EmergenceDate = parse_date_time(EmergenceDate, '%m/%d/%y'),
EarEmergenceDate = parse_date_time(EarEmergenceDate, '%m/%d/%y'),
measurement_date = parse_date_time(measurement_date, '%y/%m/%d'),
value = as.numeric(as.character(value)))
write.table(test,'BVZ0049_CH02_SPRING_phenotypes_formatted.csv',sep=',',row.names=F,quote=F)
fall.pheno=read.csv('BVZ0049-phenotyping-record-CH05-Fall.csv',head=T)
fall.pheno = fall.pheno %>% tbl_df()
fall.pheno = within(fall.pheno, rm(Seed_Count, X50seed_Weight))
test = fall.pheno %>% select(-ChamberX, -ChamberY,-Jan6TissueHarvest.DNA.Location,
-Jan6.TissueHarvest.RNA.Location) %>% gather(variable,value,
-PlantID,
-PlantName,
-Accession,
-ClonalGroup,
-Replicate,
-AccessionID,
-ExperimentID,
-User,
-GrowthLocation,
-TrayPosition,
-PlantingDate,
-IntoChamberDate,
-EmergenceDate,
-EarEmergenceDate)
test$measurement_date = ifelse(test$variable=='Sep30_GrowthStage','2015-09-30',
ifelse(test$variable=='Oct2_GrowthStage','2015-10-02',
ifelse(test$variable=='Oct5_GrowthStage','2015-10-05',
ifelse(test$variable=='Oct7_GrowthStage','2015-10-07',
ifelse(test$variable=='Oct9_GrowthStage','2015-10-09',
ifelse(test$variable=='Oct12_GrowthStage','2015-10-12',
ifelse(test$variable=='Oct14_GrowthStage','2015-10-14',
ifelse(test$variable=='Oct16_GrowthStage','2015-10-16',
ifelse(test$variable=='Oct19_GrowthStage','2015-10-19',
ifelse(test$variable=='Oct21_GrowthStage','2015-10-21',
ifelse(test$variable=='Oct23_GrowthStage','2015-10-23',
ifelse(test$variable=='Oct26_GrowthStage','2015-10-26',
ifelse(test$variable=='Oct28_GrowthStage','2015-10-28',
ifelse(test$variable=='Oct30_GrowthStage','2015-10-30',
ifelse(test$variable=='Nov2_GrowthStage','2015-11-02',
ifelse(test$variable=='Nov4_GrowthStage','2015-11-04',
ifelse(test$variable=='Nov6_GrowthStage','2015-11-06',
ifelse(test$variable=='Nov11_GrowthStage','2015-11-11',
ifelse(test$variable=='Nov13_GrowthStage','2015-11-13',
ifelse(test$variable=='Nov16_GrowthStage','2015-11-16',
ifelse(test$variable=='Nov18_GrowthStage','2015-11-18',
ifelse(test$variable=='Nov25_GrowthStage','2015-11-25',
ifelse(test$variable=='Dec4_GrowthStage','2015-12-04',
ifelse(test$variable=='Dec14_GrowthStage','2015-12-14',
ifelse(test$variable=='Oct2_Heightcm','2015-10-02',
ifelse(test$variable=='Oct9_Heightcm','2015-10-09',
ifelse(test$variable=='Oct16_Heightcm','2015-10-16',
ifelse(test$variable=='Oct23_Heightcm','2015-10-23',
ifelse(test$variable=='Oct30_Heightcm','2015-10-30',
ifelse(test$variable=='Nov6_Heightcm','2015-11-06',
ifelse(test$variable=='Nov13_Heightcm','2015-11-13',
ifelse(test$variable=='Nov20_Heightcm','2015-11-20',
ifelse(test$variable=='Dec4_Heightcm','2015-12-04',
ifelse(test$variable=='Dec14_Heightcm','2015-12-14',
ifelse(test$variable=='Jan20_Heightcm','2016-01-20',
ifelse(test$variable=='Mar4_Height','2016-03-04',
ifelse(test$variable=='Mar22.23_Height','2016-03-22',
ifelse(test$variable=='Apr12.13_Height','2016-04-12',
ifelse(test$variable=='Apr27_Height','2016-04-27',
ifelse(test$variable=='Final_Heightcm','2016-06-03',
ifelse(test$variable=='Nov11_TillerCount','2015-11-11',
ifelse(test$variable=='Jan20_TillerCount','2016-01-20',
ifelse(test$variable=='X3rd_Leaf_Width','2015-11-18',
ifelse(test$variable=='X3rd_Leaf_Length','2015-11-18',
ifelse(test$variable=='Final_Tiller_Count','2016-06-03',
ifelse(test$variable=='Ear_Count','2016-06-08',
ifelse(test$variable=='AboveSoil_BioMass_mg','2016-06-08','nope')))))))))))))))))))))))))))))))))))))))))))))))
test$variable = ifelse(test$variable=='Sep30_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct2_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct5_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct7_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct9_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct12_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct14_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct16_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct19_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct21_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct23_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct26_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct28_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct30_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov2_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov4_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov6_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov11_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov13_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov16_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov18_GrowthStage','Growth Stage',
ifelse(test$variable=='Nov25_GrowthStage','Growth Stage',
ifelse(test$variable=='Dec4_GrowthStage','Growth Stage',
ifelse(test$variable=='Dec14_GrowthStage','Growth Stage',
ifelse(test$variable=='Oct2_Heightcm','Height',
ifelse(test$variable=='Oct9_Heightcm','Height',
ifelse(test$variable=='Oct16_Heightcm','Height',
ifelse(test$variable=='Oct23_Heightcm','Height',
ifelse(test$variable=='Oct30_Heightcm','Height',
ifelse(test$variable=='Nov6_Heightcm','Height',
ifelse(test$variable=='Nov13_Heightcm','Height',
ifelse(test$variable=='Nov20_Heightcm','Height',
ifelse(test$variable=='Dec4_Heightcm','Height',
ifelse(test$variable=='Dec14_Heightcm','Height',
ifelse(test$variable=='Jan20_Heightcm','Height',
ifelse(test$variable=='Mar4_Height','Height',
ifelse(test$variable=='Mar22.23_Height','Height',
ifelse(test$variable=='Apr12.13_Height','Height',
ifelse(test$variable=='Apr27_Height','Height',
ifelse(test$variable=='Final_Heightcm','Height',
ifelse(test$variable=='Nov11_TillerCount','Tiller Count',
ifelse(test$variable=='Jan20_TillerCount','Tiller Count',
ifelse(test$variable=='X3rd_Leaf_Width','Leaf Width',
ifelse(test$variable=='X3rd_Leaf_Length','Leaf Length',
ifelse(test$variable=='Final_Tiller_Count','Tiller Count',
ifelse(test$variable=='Ear_Count','Ear Count',
ifelse(test$variable=='AboveSoil_BioMass_mg','Biomass','nope')))))))))))))))))))))))))))))))))))))))))))))))
test = test %>% tbl_df() %>%
mutate(Replicate = as.factor(Replicate),
AccessionID = as.factor(AccessionID),
PlantID = as.factor(PlantID),
PlantingDate = parse_date_time(PlantingDate, '%m/%d/%y'),
IntoChamberDate = parse_date_time(IntoChamberDate, '%m/%d/%y'),
EmergenceDate = parse_date_time(EmergenceDate, '%m/%d/%y'),
EarEmergenceDate = parse_date_time(EarEmergenceDate, '%m/%d/%y'),
measurement_date = parse_date_time(measurement_date, '%y/%m/%d'),
value = as.numeric(as.character(value)))
test
library(gganimate)
test %>% filter(variable=='Height')
test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=measurement_date)) + geom_bixplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')
test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=measurement_date)) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')
plott=test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=measurement_date)) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')
gg_animate(plott,ani.width=1280,ani.height=720, 'height.test.gif')
plott=test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=measurement_date)) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')
gg_animate(plott,ani.width=1280,ani.height=720, 'height.test.gif')
plott=test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=as.factor(measurement_date))) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')
gg_animate(plott,ani.width=1280,ani.height=720, 'height.test.gif')
test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=measurement_date)) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession') + theme_sre
theme_sre=theme(text=element_text(family="Avenir Next Condensed"),
axis.title=element_text(size=20),
legend.position="bottom",
legend.key=element_rect(fill=NA),
legend.text.align=1,
legend.title=element_text(size=15),
legend.box='horizontal',
plot.background=element_rect(fill=NA),
panel.grid.major.y=element_line(size=1,linetype=1,color="grey"),
panel.grid.major.x=element_line(size=1,linetype=1,color="grey"),
panel.grid.minor.x=element_line(size=0),
panel.grid.minor.y=element_line(size=0),
panel.background=element_rect(fill=NA),
axis.ticks=element_line(color='black',size=1),
axis.line.x=element_line(color='red',size=10,linetype=1),
axis.text=element_text(size=15,color='black'),
axis.text.x = element_text(angle = -90,hjust=0,vjust=0.5),
axis.title.x=element_text(hjust=0),
axis.title.y=element_text(hjust=0,vjust=1),
axis.ticks.length=unit(1,"cm")
)
test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=measurement_date)) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession') + theme_sre
plott=test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=as.factor(measurement_date))) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')  + theme_sre
gg_animate(plott,ani.width=1280,ani.height=720, interval=0.5,'height.test.gif')
plott=test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,fill=ClonalGroup,frame=as.factor(measurement_date))) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')  + theme_sre
gg_animate(plott,ani.width=1280,ani.height=720, interval=0.5,'height.test.gif')
plott=test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=as.factor(measurement_date))) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')  + theme_sre
gg_animate(plott,ani.width=1280,ani.height=720, interval=0.5,'height.test.gif')
theme_sre=theme(text=element_text(family="Avenir Next Condensed"),
axis.title=element_text(size=20),
legend.position="bottom",
legend.key=element_rect(fill=NA),
legend.text.align=1,
legend.title=element_text(size=15),
legend.box='horizontal',
plot.background=element_rect(fill=NA),
panel.grid.major.y=element_line(size=1,linetype=1,color="grey"),
panel.grid.major.x=element_line(size=1,linetype=1,color="grey"),
panel.grid.minor.x=element_line(size=0),
panel.grid.minor.y=element_line(size=0),
panel.background=element_rect(fill=NA),
axis.ticks=element_line(color='black',size=1),
axis.line.x=element_line(color='red',size=1,linetype=1),
axis.text=element_text(size=15,color='black'),
axis.text.x = element_text(angle = -90,hjust=0,vjust=0.5),
axis.title.x=element_text(hjust=0),
axis.title.y=element_text(hjust=0,vjust=1),
axis.ticks.length=unit(1,"cm")
)
plott=test %>% filter(variable=='Height') %>% ggplot(aes(Accession,value,color=ClonalGroup,frame=as.factor(measurement_date))) + geom_boxplot(position = position_dodge(width=0),width=8) + ylab('Plant Height (cm)') + xlab('Accession')  + theme_sre
gg_animate(plott,ani.width=1280,ani.height=720, interval=0.5,'height.test.gif')
